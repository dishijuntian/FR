# 航班排名系统配置文件 - 适配更新后的训练预测模块
# 集成特征选择器和智能模型管理

# 路径配置
paths:
  data_dir: "data/aeroclub-recsys-2025"
  model_input_dir: "data/aeroclub-recsys-2025/processed"
  model_save_dir: "data/aeroclub-recsys-2025/models"
  output_dir: "data/aeroclub-recsys-2025/submissions"
  log_dir: "logs"

# 数据处理配置 - 适配DataProcessor
data_processing:
  chunk_size: 300000      # 增加默认chunk_size，适配内存优化
  n_processes: null       # null=自动检测CPU核数
  force_encode: false
  force_segment: false
  force_feature: true
  verify_results: true
  force_reprocess: false
  
  # 特征工程配置 - 适配DataEngineering
  feature_engineering:
    enabled: true
    
    # 基础特征类型 - 对应DataEngineering中的方法
    feature_types:
      - core           # 核心特征（价格、时间、舱位等）
      - route          # 路线特征
      - time           # 时间特征
      - ranker         # 基于ranker_id的特征
      - carrier        # 航空公司特征
      - passenger      # 乘客特征
      - interaction    # 基础交互特征
    
    # 是否启用交互特征
    enable_interactions: true
    
    # 增强特征工程配置
    enhanced_features:
      enabled: true
      types:
        - economic     # 经济学特征
        - behavioral   # 行为经济学特征
      max_features: 200
      
    # 自动特征发现配置
    auto_discovery:
      enabled: false    # 默认关闭，避免特征过多
      max_features: 50

# 训练配置 - 适配FlightRankingTrainer
training:
  segments: [0, 1, 2]  # 训练的数据段
  model_names: ['XGBRanker', 'LGBMRanker', 'RankNet']  # 候选模型
  use_gpu: true
  random_state: 42
  epochs: 100          # 深度学习模型的训练轮数
  validation_split: 0.2  # 验证集比例
  
  # 模型参数配置 - 对应每个模型的初始化参数
  model_configs:
    XGBRanker:
      n_estimators: 200
      max_depth: 8
      learning_rate: 0.05
      
    LGBMRanker:
      n_estimators: 200
      max_depth: 8
      learning_rate: 0.05
      
    RankNet:
      hidden_dims: [128, 64, 32]
      learning_rate: 0.001
      dropout_rate: 0.2

# 预测配置 - 适配FlightRankingPredictor  
prediction:
  segments: [0, 1, 2]  # 预测的数据段
  use_gpu: true
  
  # 预测优化
  prediction_optimization:
    batch_size: 10000        # 预测批大小
    memory_efficient: true   # 内存高效模式
    save_individual_results: true  # 保存各段的单独结果

# Manager配置 - 适配FlightRankingModelsManager的特征选择器
feature_selection:
  # 特征选择器配置 - 对应FeatureSelector的config参数
  enabled: true
  max_features: 40           # 目标特征数量（30-50个特征）
  selection_methods: ['importance', 'statistical']  # 选择方法
  variance_threshold: 0.0    # 方差阈值（保留低方差但有意义的特征）
  correlation_threshold: 0.98  # 相关性阈值（允许一定程度的相关性）
  importance_method: 'lightgbm'  # 重要性方法
  statistical_method: 'mutual_info'  # 统计方法
  sample_size: 30000         # 特征选择时的采样大小
  
  # 特殊数据适配配置
  preserve_categorical: true      # 保留分类特征
  handle_missing_as_feature: true # 将缺失值(-1)作为特征信息
  allow_low_variance_bool: true   # 允许低方差的布尔特征

# 评估配置
evaluation:
  # 主要评估指标 - 对应trainer中的HitRate@3
  primary_metric: "hitrate_at_3"
  
  # HitRate@k配置
  hitrate_k: 3               # 计算HitRate@k的k值
  
  # 模型选择策略
  model_selection:
    strategy: "best_validation"  # 基于验证集性能选择最佳模型
    save_all_models: false      # 是否保存所有模型（否则只保存最佳模型）

# 数据预处理配置 - 适配Manager.prepare_data方法
data_preprocessing:
  # 数据清理
  remove_invalid_groups: true     # 移除无效的ranker组
  
  # 特征处理
  feature_processing:
    # 零方差特征处理 - 对应remove_zero_variance_features方法
    remove_zero_variance: true
    preserve_bool_categorical: true  # 保留布尔和分类特征
    
    # 缺失值处理
    missing_value_strategy: "median"  # 数值特征用中位数填充
    
    # 数据类型优化
    optimize_dtypes: true

# 模型保存和加载配置
model_management:
  # 保存配置
  save_feature_selector: true     # 保存特征选择器配置
  save_feature_names: true       # 保存特征名称列表
  save_model_configs: true       # 保存模型配置
  
  # 加载配置
  validate_on_load: true         # 加载后验证模型
  
  # 最佳模型配置文件
  best_models_config_file: "best_models_config.json"
  training_report_file: "training_report.json"

# 内存和性能优化 - 适配Core.py中的内存监控
performance:
  # GPU配置
  gpu_settings:
    auto_detect: true            # 自动检测GPU可用性
    fallback_to_cpu: true       # GPU失败时回退到CPU
    
  # 内存优化 - 适配FlightRankingCore
  memory_optimization:
    clear_cache_between_segments: true  # 段间清理缓存
    optimize_data_types: true         # 优化数据类型
    use_float32: true                 # 使用float32而非float64
    force_gc_after_stages: true       # 各阶段后强制垃圾回收
    memory_warning_threshold: 90      # 内存使用警告阈值(%)
    min_available_memory_gb: 2.0      # torch加载前最小可用内存
    
  # 并行处理 - 适配DataProcessor和DataSegment
  parallel_processing:
    n_jobs: -1                   # 并行任务数（-1表示使用所有CPU）
    batch_processing: true       # 批处理模式
    chunk_size_auto_adjust: true # 根据内存自动调整chunk_size

# 数据分割配置 - 适配DataSegment
data_segmentation:
  # 分割方法配置
  pre_classification: true         # 预先分类ranker_id
  use_row_groups: true            # 使用parquet行组优化
  max_workers_segment: 8          # 分割时最大进程数
  
  # 验证配置
  verify_integrity: true          # 验证数据完整性
  skip_train_verification: true   # 跳过train数据验证（只警告）
  
  # 输出优化
  remove_constant_columns: true   # 移除恒定值列
  sort_by_id: true               # 按ID排序输出

# 日志配置 - 适配Core.py的日志设置
logging:
  level: "INFO"
  format: "%(asctime)s - %(levelname)s - %(message)s"  # 简化格式匹配Core.py
  datefmt: "%Y-%m-%d %H:%M:%S"
  
  # 文件日志
  file_logging:
    enabled: true
    filename_pattern: "flight_ranking_{timestamp}.log"  # 匹配Core.py中的模式
    encoding: "utf-8"
  
  # 详细日志选项
  detailed_logging:
    model_training: true         # 详细记录模型训练过程
    feature_selection: true     # 特征选择详细日志
    data_preprocessing: true    # 数据预处理详细日志
    model_evaluation: true      # 模型评估详细日志
    prediction_process: true    # 预测过程详细日志
    memory_monitoring: true     # 内存监控日志
    
# 特征工程详细配置 - 适配DataEngineering的方法
feature_engineering_advanced:
  # 核心特征配置
  core_features:
    price_features: true          # 价格特征
    duration_features: true       # 持续时间特征
    trip_type_features: true      # 行程类型特征
    segment_count_features: true  # 航班段数特征
    
  # 经济学特征配置
  economic_features:
    price_elasticity: true        # 价格弹性特征
    time_value_analysis: true     # 时间价值特征
    booking_behavior: true        # 预订行为特征
    market_analysis: true         # 市场分析特征
    
  # 行为学特征配置
  behavioral_features:
    choice_overload: true         # 选择过载特征
    loss_aversion: true           # 损失厌恶特征
    social_proof: true            # 社会认同特征
    cognitive_bias: true          # 认知偏差特征
    
  # 自动特征发现配置
  auto_discovery_advanced:
    statistical_features: true    # 统计特征
    clustering_features: false   # 聚类特征（需要sklearn）
    binning_features: true       # 分箱特征
    combination_features: true   # 组合特征
    variance_threshold: 0.01     # 方差阈值

# 实验和报告配置
reporting:
  # 训练报告
  training_reports:
    generate_detailed_report: true    # 生成详细训练报告
    include_feature_importance: true  # 包含特征重要性
    include_model_comparison: true    # 包含模型对比
    
  # 预测报告  
  prediction_reports:
    generate_prediction_report: true  # 生成预测报告
    include_segment_stats: true      # 包含各段统计
    include_model_usage: true       # 包含模型使用情况

# 流水线控制
pipeline:
  run_data_processing: false    # 是否运行数据处理
  run_training: true           # 是否运行训练
  run_prediction: true         # 是否运行预测
  
  # 错误处理
  error_handling:
    continue_on_segment_failure: true  # 单段失败时继续其他段
    min_successful_segments: 1         # 最少成功段数
    
  # 自动清理
  auto_cleanup:
    clear_intermediate_files: false   # 清理中间文件
    keep_best_models_only: true      # 只保留最佳模型

# 调试和开发配置
debug:
  enabled: false               # 调试模式
  save_intermediate_data: false  # 保存中间数据
  verbose_feature_selection: false  # 特征选择详细输出
  profile_performance: false   # 性能分析
  
  # 快速测试配置
  quick_test:
    enabled: false             # 快速测试模式
    max_samples_per_segment: 10000  # 每段最大样本数
    epochs: 5                  # 减少训练轮数
    max_features: 20           # 减少特征数